name: Creating And Deploying Backend and Proxy Docker Images

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop
jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    name: "DockerHub: Backend and Reverse Proxy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERUSSER }}
          password: ${{ secrets.DOCKERPASS }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend Docker image
        run: |
          echo "--------- Building backend Docker image -----------"
          docker build -t infiniteloopers-backend-server ./backend
          docker tag infiniteloopers-backend-server ${{ secrets.DOCKERUSSER }}/infiniteloopers-backend-server:v1
          docker push ${{ secrets.DOCKERUSSER }}/infiniteloopers-backend-server:v1
        env:
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

      - name: Build and push reverse proxy Docker image
        run: |
          echo "--------- Building reverse proxy Docker image -----------"
          docker build -t infiniteloopers-reverseproxy ./reverseproxy
          docker tag infiniteloopers-reverseproxy ${{ secrets.DOCKERUSSER }}/infiniteloopers-reverseproxy:v1
          docker push ${{ secrets.DOCKERUSSER }}/infiniteloopers-reverseproxy:v1

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
      
      - name: Set Git User Info
        run: |
          git config --global user.name "${{ secrets.GIT_USER }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"

      - name: Set up Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh
    
      - name: Authenticate with Heroku
        run: |
          echo "machine api.heroku.com login ${{ secrets.HEROKU_EMAIL }} password ${{ secrets.HEROKU_API_KEY }}" > ~/.netrc
          echo "machine git.heroku.com login ${{ secrets.HEROKU_EMAIL }} password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc

      - name: Pushing Backend Directory to Heroku
        run: |
          git clone https://github.com/COS301-SE-2024/The-Republic.git
          cd The-Republic
          heroku git:remote -a "${{ secrets.HEROKU_BACKEND }}"
          git subtree push --prefix backend heroku master