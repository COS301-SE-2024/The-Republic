name: Creating And Deploying Docker Images

on:
  push:
    branches:
      - master
      - main
      - develop
  workflow_run:
    workflows:
      - "Frontend Unit Testing"
      - "Backend Unit Testing"
      - "Lint Frontend Application"
      - "Lint Backend Application"
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: "DockerHub: Containerized Environments For The Project"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          echo "--------- Installing dependencies -----------"
          curl -LO https://nodejs.org/dist/v18.0.0/node-v18.0.0-linux-x64.tar.xz
          tar -xvf node-v18.0.0-linux-x64.tar.xz
          sudo cp -r node-v18.0.0-linux-x64/{bin,include,lib,share} /usr/
          node --version # This should output v18.0.0
          sudo apt install -y nodejs

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERUSSER }}
          password: ${{ secrets.DOCKERPASS }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend Docker image
        run: |
          echo "--------- Building backend Docker image -----------"
          docker build -t infiniteloopers-backend-server ./backend
          docker tag infiniteloopers-backend-server ${{ secrets.DOCKERUSSER }}/infiniteloopers-backend-server:v0
          docker push ${{ secrets.DOCKERUSSER }}/infiniteloopers-backend-server:v0
        env:
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

      - name: Build and push frontend Docker image
        run: |
          echo "--------- Building frontend Docker image -----------"
          docker build -t infiniteloopers-frontend-app ./frontend
          docker tag infiniteloopers-frontend-app ${{ secrets.DOCKERUSSER }}/infiniteloopers-frontend-app:v0
          docker push ${{ secrets.DOCKERUSSER }}/infiniteloopers-frontend-app:v0
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}

      - name: Build and push reverse proxy Docker image
        run: |
          echo "--------- Building reverse proxy Docker image -----------"
          docker build -t infiniteloopers-reverseproxy ./reverseproxy
          docker tag infiniteloopers-reverseproxy ${{ secrets.DOCKERUSSER }}/infiniteloopers-reverseproxy:v0
          docker push ${{ secrets.DOCKERUSSER }}/infiniteloopers-reverseproxy:v0
  